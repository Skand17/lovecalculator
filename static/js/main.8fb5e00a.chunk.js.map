{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","fname","setFName","lname","setLName","state","setState","message","setMessage","className","onSubmit","e","preventDefault","options","method","url","params","sname","headers","process","axios","request","then","response","data","result","percentage","catch","error","console","handleCheck","type","required","onChange","target","value","color","currentProgress","showPercent","show","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,I,qDCmEAA,MA5Df,WAIE,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAAyBF,mBAAS,IAAlC,mBAAOG,EAAP,KAAaC,EAAb,KAEA,EAAyBJ,mBAAS,GAAlC,mBAAOK,EAAP,KAAaC,EAAb,KAEA,EAA6BN,mBAAS,IAAtC,mBAAOO,EAAP,KAAeC,EAAf,KAsBA,OACE,sBAAKC,UAAU,MAAf,UACI,2EACA,eAAC,IAAD,CAAMC,SAAU,SAACC,GAAD,OAvBF,SAACA,GACnBA,EAAEC,iBACF,IAAIC,EAAU,CACZC,OAAQ,MACRC,IAAK,uDACLC,OAAQ,CAACC,MAAOhB,EAAOA,MAAOE,GAC9Be,QAAS,CACP,kBAAmB,iCACnB,iBAAkBC,uDAItBC,IAAMC,QAAQR,GAASS,MAAK,SAAUC,GACpCf,EAAWe,EAASC,KAAKC,QACzBnB,EAASiB,EAASC,KAAKE,eACtBC,OAAM,SAAUC,GACjBC,QAAQD,MAAMA,MAOWE,CAAYnB,IAAnC,UACE,sBAAKF,UAAU,aAAf,UACE,oDACA,cAAC,IAAD,CAAOsB,KAAK,OAAQC,UAAQ,EAACC,SAAW,SAACtB,GAAD,OAAOT,EAASS,EAAEuB,OAAOC,aAEnE,sBAAK1B,UAAU,aAAf,UACE,4DACA,cAAC,IAAD,CAAOsB,KAAK,OAAOC,UAAQ,EAACC,SAAW,SAACtB,GAAD,OAAOP,EAASO,EAAEuB,OAAOC,aAElE,cAAC,IAAD,CAAQC,MAAM,UAAd,mCAEF,sBAAK3B,UAAU,aAAf,UACE,6BAAKF,GAAoB,KACzB,cAAC,IAAD,CACM8B,gBAAiBhC,EACjBiC,aAAa,EACbC,MAAM,EACNH,MAAM,MACNI,MAAM,eChDPC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8fb5e00a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { FormGroup,Input,Button,Form } from 'reactstrap';\nimport axios from 'axios'\nimport ReactProgressMeter from 'react-progress-meter'\n\nfunction App() {\n\n\n\n  const [fname,setFName] = useState('')\n\n  const [lname,setLName] = useState('')\n\n  const [state,setState] = useState(0)\n\n  const [message,setMessage] = useState('')\n\n  const handleCheck = (e) => {\n    e.preventDefault()\n    var options = {\n      method: 'GET',\n      url: 'https://love-calculator.p.rapidapi.com/getPercentage',\n      params: {sname: fname, fname: lname},\n      headers: {\n        'x-rapidapi-host': 'love-calculator.p.rapidapi.com',\n        'x-rapidapi-key': process.env.REACT_APP_KEY\n      }\n    };\n    \n    axios.request(options).then(function (response) {\n      setMessage(response.data.result)\n      setState(response.data.percentage)\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  return (\n    <div className=\"App\">\n        <h2>Calculate compatibility with your partner</h2>\n        <Form onSubmit={(e) => handleCheck(e)}>\n          <div className=\"form-group\">\n            <label>Enter your name</label>\n            <Input type=\"text\"  required onChange={ (e) => setFName(e.target.value) }/>        \n          </div>\n          <div className=\"form-group\">\n            <label>Enter your partner name</label>\n            <Input type=\"text\" required onChange={ (e) => setLName(e.target.value) }/>      \n          </div>\n          <Button color=\"primary\">Check Compatibiity</Button>\n        </Form>\n        <div className=\"your-score\">\n          <h4>{message ? message : \"\"}</h4>\n          <ReactProgressMeter \n                currentProgress={state} \n                showPercent={true}\n                show={true}\n                color=\"red\" \n                width=\"80%\"\n        />\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}